{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf160
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 Menlo-Bold;
}
{\colortbl;\red255\green255\blue255;\red0\green128\blue0;\red0\green0\blue255;\red163\green21\blue21;
\red43\green131\blue159;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 turnToTech_swiftIbook.playground\
Q1: 
\f1\fs22 \cf2 \CocoaLigature0 // how to print the dictionary key value using a for in loop??\
line 120\
\pard\tx529\pardeftab529\pardirnatural
\cf3 don\'92t need to loop, use dictionary.keys property, then loop thru the array\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 \CocoaLigature1 Q1: do not understnad how the sorted function works in the examples\'85 \
- why is s1 = Alex and s2 = Chris in the first iteration?\
- you get return values of true and false.. so, which iteration determines  the correct \'91sorted\'92 order prefernce?\
- related to Closures as arguments in 
\b Class 3.xcodeproj
\b0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f1\fs22 \cf3 \CocoaLigature0 let\cf0  names = [\cf4 "Chris"\cf0 , \cf4 "Alex"\cf0 , \cf4 "Ewa"\cf0 , \cf4 "Barry"\cf0 , \cf4 "Daniella"\cf0 ]\
\pard\tx529\pardeftab529\pardirnatural
\cf0 \
\pard\tx529\pardeftab529\pardirnatural
\cf3 func\cf0  backwards(s1: \cf5 String\cf0 , s2: \cf5 String\cf0 ) -> \cf5 Bool\cf0  \{\
    \cf5 println\cf0 (\cf4 "s1 \cf0 \\(s1)\cf4  s2 \cf0 \\(s2)\cf4 "\cf0 )\
    \cf5 println\cf0 (s1>s2)\
    \cf3 return\cf0  s1 > s2\
\}\
\cf3 var\cf0  reversed = \cf5 sorted\cf0 (\cf5 names\cf0 , \cf5 backwards\cf0 )\
\pard\tx529\pardeftab529\pardirnatural
\cf2 // reversed is equal to ["Ewa", "Daniella", "Chris", "Barry", "Alex"]\
\pard\tx529\pardeftab529\pardirnatural
\cf0 \

\f2\b review this.. look more closely at the sorted function and the $0 and $1 < or > details.
\f1\b0 \
}