{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf160
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue255;\red0\green128\blue0;\red43\green131\blue159;
\red255\green0\blue0;}
\margl1440\margr1440\vieww15600\viewh15060\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\b\fs24 \cf0 Questions: \
2) Can you show me how to set up a webview into which I can put javascript / html?\
	- want to see what happens w/ openURL - does it open in app or in Safari?\
\
\
TurnToTech Week 01 class 01					Jan. 29, 2015\
Project example files: 
\b0 Class 3.xcodeproj \

\b Lecture files:
\b0  Class-3A.pdf\
peers: Harteg, Robert, Lance\
\

\b Closures
\b0  - block of code (general)\
ie: function - reusable, named block of code that may take an input and may return an output\
(all functions are closures)\
\

\b TODo:
\b0  read up on functional programming - get on 
\b google plus w/ oren
\b0  for the notes there\
Obj-C has farily convoluted syntax, but it does support closures.\
\
** a function can return a block of code for you,\
\

\b Basic Structure:\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 \
\pard\tx529\pardeftab529\pardirnatural

\f1\fs22 \cf2 \CocoaLigature0 func\cf0  outerFunction() -> (()->())\{\
\
    \cf2 func\cf0  innerFunction() \{\
     \
        \cf3 //\
\cf0     \}\
    \
    \cf3 //\cf0     \
    \cf2 return\cf0  \cf4 innerFunction\cf0 ;\
\}\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 \CocoaLigature1 Scope is very important with closures - because the context is maintained\
\pard\tx529\pardeftab529\pardirnatural

\fs22 \cf0 \CocoaLigature0 \
// xCode debugging note: set up a breakpoint at the beginning of the function to step thru the code\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\fs24 \cf0 \CocoaLigature1 // definitiion note\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 	synchronous
\b0  = doing things in sequence - think - people waiting in line for their turn\

\b 	asynchronous
\b0  = multi-tasking, doing things in parallel (ie: muliti-threading) think - more lines for people to be on\
	*
\b async
\b0  is important for mobile, b/c waiting time results in poor user experience, limitations of network connectivity, etc..\
// definitiion note\
\
// 
\fs22 \CocoaLigature0 xCode UI note: 
\fs24 \CocoaLigature1 there are bugs w/ xcode where the build fails.. try PRODUCT -> SCHEME -> New Scheme, then hit cmd +B\
\
// xcode storyboard files are xml, if you have people working on multiple portions of the same storyboard you should be able to merge the xml files - good to know and become familiar w/ the xml file structure\
\

\b Main point: \cf5 Closures can maintain different contexts and close over variables separately if the function is assigned (called) to multiple function references. 
\b0 page 6/19 of the PDF
\b .\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf5 	- more powerful than using global variables, b/c each time the closure (funciton) is called it can keep track of its own variables\
	- similar to Objects with their own properties and methods
\b \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 \
// extraneous code in 6/19 removed\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 xCode: 
\b0 ViewController.swift: 
\i Functions as Objects
\i0  - 
\f1\fs22 \CocoaLigature0 functionAsObjDemo 
\f0\fs24 \CocoaLigature1 points to FunctionsAsObjects.swift\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f1 \cf0 func functionWithACounter() -> (() -> ()) \{\
    \
    var counter = 1\
    \
    func implementSomeAlternatingBehavior() \{\
        \
        if counter % 2 == 0 \{\
            \
            println("This function was called an EVEN number of times")\
            \
        \} else \{\
            \
            println("This function was called an ODD number of times")\
            \
        \}\
        counter++\
    \}\
    return implementSomeAlternatingBehavior\
    \
\}\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0 \cf0 \
example closure usage: several images you want to download.. need to make async downloads for each image, each image has its own position, each \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b0 \cf0 // language history note: Obj-C was very very unreadable, then came \'91block\'92 syntax (allowed for objective C closures) which made obj-c more readable.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf5 * There are 
\i\b different
\i0\b0  
\i\b Closure styles
\i0\b0  and syntax.. you need to get to be familiar w/ the different ones if you need to look at other people\'92s code.\cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 page 7/19 
\b0 \
- function to describe sort\
- closure to describe sort\
	- the purpose of \'93in\'94, is pretty much the same as \'93\{\'93\
	- passing args is like the way it is when calling function: \
\
When debugging, never turn optimization on b/c the code will run crazy.\
\

\b refer to
\b0 : {\field{\*\fldinst{HYPERLINK "https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Closures.html"}}{\fldrslt https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/Closures.html}}\

\b sorted() 
\b0 function -> look at the first and second element of the list.. then keep that order (true) or do the other order (false)  THis is used to define the sort order of any types of things\
\
\
there\'92s no preference of closure over function, but it depends on the context of use.\
if you want to explicitly call something, then you\'92ll most likely use a function\
\
if you want to pass a function as an argument, then you\'92re most likely to use a closure assigned to a variable\
\
\

\b ToDo
\b0 \
find associated functions of the project in the storyboard, play around w/ it try to understand what\'92s going on\
*go thru the startSearch use println() to see what\'92s coming out\
\
look for the different ways the closures can be written (via the sort function)\
}