{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf160
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red149\green149\blue149;}
\margl1440\margr1440\vieww12060\viewh12800\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
{\field{\*\fldinst{HYPERLINK "http://justcode.turntotech.io:8080/TurnToTechOnline/jsp/public/modules.jsp?course_index=1"}}{\fldrslt 
\f0\fs24 \cf0 http://justcode.turntotech.io:8080/TurnToTechOnline/jsp/public/modules.jsp?course_index=1}}
\f0\fs24  (week 4 first module -> run sample code)\
login: gmail\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 TurnToTech Week 03 class 02					Feb. 12, 2015\
Project example files:
\b0  AppFromFirstPrinciples.xcodeproj\

\b Lecture files: 
\b0 Class8.pdf\
peers: Harteg, Lance\
\

\b **Look at UIView programming guide PDF
\b0 \
\
Just b/c there\'92s a viewcontroller class, doesn\'92t necessarily mean the application uses MVC pattern\'85 most of the time this is the case.\
\
\pard\pardeftab720

\b \cf0 \expnd0\expndtw0\kerning0
** This is the main concept:
\b0 \
Controllers support your views by responding to user actions and populating the views with content. \expnd0\expndtw0\kerning0
\
\
\
View is where you receive user actions\
controller has a list of actions that can be performed\
	- the view might update\
		- \
\
ex: search \
view - enters a search keyword\
controller - receives the keyword, sends to the model\
model - performs the logic for the search, returns the info, passes to controller\
controller - takes the info and tells the \
view - to update\
\
tightly coupled code vs. loosely coupled code\
\
page 4/16: Last class we only focused on UIView, Window, Screen\
\
take a view, set the \'93File\'92s Owner\'94 to a controller\
linking views and view controller\
- viewcontroller should extend UIViewController Class\
\
** If the custom class is not an extension of a UIViewController the control+click+drag won\'92t work.\
TextField - \'91outlet\'92\
Turns the visual view object on the story board into an instance variable\
Name = instance var name\
\
Button - \'91action\'92\
Turns the visual view object on the story board into a function\
Name = function name\
\
Several View Items together will be linked as an outlet collection , becomes an array\
\
Controller gets the events for each view and it has the ability to change / update the views.\
\

\b simulator cleanup - 
\b0 sometimes stuff gets cached in the simulator and if you update xib files etc.. you run into problems so\'85\
menu: iOS simulator -> Reset Content and Settings\
\
IB- interface builder\
\
Looking at the xib - need to get htis from Aditya\
\
How can a viewcontroller know which view it\'92s talking to. There\'92s an instance variable\
view property of the viewcontroller is self?\
\
EveryApp that has a viewcontroller should have a rootviewcontroller. - will have a view property.. that view property is the RootView. (property of the UIWindow)\
You can see this in the AppDelegate file.. \
func application(\
self.window\
self.window!.rootviewcontroller = controller\
*Add a rootview controller to the window\
\
\
The VC has methods that are called in very specific order, this is known as the lifecycle:\
for apple apps, there are multiple VC\'92s for different views\
each view has its own mvc pattern\
init\
loadView\
viewDidLoad - this only happens once (unless the view is put out of scope.. set to nil, or deinit()-ed)\
viewWillAppear\
viewWillDisappear\
\
every app sequence:\
AppDelegate\
- func application\
	view controller gets called inited\
\
FirstViewcontroller follows its life cycle\
\
working w/ xibs you will see this.. the delegate stuff is not as transparent in the storyboard\
\
- so.. in the VC you have a button handler.. in the handler you set up an object for the \'91login\'92 class.. and call the object\'92s method.. this points to a different class w/in which the logic for handling these events are.\
\
look into angular.js on wikipedia.. it takes front end (which normally would all be V) and makes it mvc-ish\
\
How to have multiple views?\
- you will want to have a navigation controller..?\
- hierarchy .. \
\
// view and class is out of sync you get an error message like: \'93
\f1\b\fs22 \kerning1\expnd0\expndtw0 \CocoaLigature0 Terminating app due to uncaught exception 'NSUnknownKeyException', reason: '[<FirstApp.FirstViewController 0x7ff9e36205e0> setValue:forUndefinedKey:]: this class is not key value coding-compliant for the key displayLabel.'
\f0\b0\fs24 \expnd0\expndtw0\kerning0
\CocoaLigature1 \'94\
 the \'91
\f1\b\fs22 \kerning1\expnd0\expndtw0 \CocoaLigature0 displayLabel
\f0\b0\fs24 \expnd0\expndtw0\kerning0
\CocoaLigature1 \'92 instance variable was created in the class by ctrl+click+dragging and linking a UIObject to the class def.. then the Instance Var was deleted without updating the UI element\'92s Referencing Outlets in the Storyboard.\
\
The little cube is the 
\b File\'92s Owner
\b0  where you select it and you can change it in the Identity inspector - associate it w/ a differnt Class xib file\
\

\b Assignment
\b0 \
create a new xib file\
-> file, -> new file, -> userinterface, -> view -> next.. name the xib file.. set the app to launch with the new xib file and set up those ui elements and make them functional.\
\
\
\
Node.js is a way to write js on the backend.}